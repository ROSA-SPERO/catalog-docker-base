#!/bin/bash

# URL for the primary database, in the format expected by sqlalchemy (required
# unless linked to a container called 'db')
: ${DATABASE_URL:=}
# URL for solr (required unless linked to a container called 'solr')
: ${SOLR_URL:=}
# Email to which errors should be sent (optional, default: none)
: ${ERROR_EMAIL:=}
# Redis URL
: ${REDIS_URL:=}
# DB URL for the PyCSW Database
: ${PYCSW_DB_URL:=}
: ${CKAN_DEBUG:=false}
: ${CKAN_SERVER_NAME:=}
: ${MAIL_SERVER:=}
: ${MAIL_PORT:=}
: ${MAIL_USE_TLS:=}
: ${MAIL_USERNAME:=}
: ${MAIL_PASSWORD:=}
: ${MAIL_FROM:=admin.ioos.us}
: ${FEEDBACK_RECIPIENTS:=}

set -eux

CONFIG="${CKAN_CONFIG}/ckan.ini"

abort () {
  echo "$@" >&2
  exit 1
}

update_pycsw_config () {
    echo "Updating PyCSW Config"
    sed -i -e "s&POSTGRES_CONN_STRING&${PYCSW_DB_URL}&" "${CKAN_HOME}/src/pycsw/default.cfg"
}

write_config () {
  local hostinfo=$(echo $REDIS_URL | cut -f3 -d/)
  local redis_host=$(echo $hostinfo | cut -f1 -d:)
  local redis_port=$(echo $hostinfo | cut -f2 -d:)
  local redis_db=$(echo $REDIS_URL | cut -f4 -d/)
  "$CKAN_HOME"/bin/paster make-config ckan "$CONFIG"

  # use the same port for the webserver when debug is enabled
  "$CKAN_HOME"/bin/paster --plugin=ckan config-tool "$CONFIG" -s server:main \
                                                -e 'port = 8080'

  "$CKAN_HOME"/bin/paster --plugin=ckan config-tool "$CONFIG" -e \
      "sqlalchemy.url = ${DATABASE_URL}" \
      "solr_url = ${SOLR_URL}" \
      "ckan.storage_path = /var/lib/ckan" \
      "ckan.site_title = IOOS Catalog" \
      "ckan.site_logo = /ioos_logo.png" \
      "email_to = disabled@example.com" \
      "error_email_from = ckan@$(hostname -f)" \
      "ckan.site_url = ${CKAN_SERVER_NAME}" \
      "ckan.plugins = stats text_view image_view recline_view spatial_metadata spatial_query harvest ckan_harvester csw_harvester waf_harvester ioos_theme ioos_waf googleanalytics"
  $CKAN_HOME/bin/paster --plugin=ckan config-tool $CONFIG ckan.extra_resource_fields=guid
  $CKAN_HOME/bin/paster --plugin=ckan config-tool $CONFIG "ckan.ioos_theme.pycsw_config=${CKAN_HOME}/src/pycsw/default.cfg"
  $CKAN_HOME/bin/paster --plugin=ckan config-tool $CONFIG "ckan.cors.origin_allow_all = true"
  $CKAN_HOME/bin/paster --plugin=ckan config-tool $CONFIG "ckan.tracking_enabled = true"

  if [ -n "$MAIL_SERVER" ]; then
      $CKAN_HOME/bin/paster --plugin=ckan config-tool $CONFIG "smtp.server = $MAIL_SERVER"
  fi
  if [ -n "$MAIL_PORT" ]; then
      $CKAN_HOME/bin/paster --plugin=ckan config-tool $CONFIG "smtp.port = $MAIL_PORT"
  fi
  if [ -n "$MAIL_USE_TLS" ]; then
      $CKAN_HOME/bin/paster --plugin=ckan config-tool $CONFIG "smtp.starttls = $MAIL_USE_TLS"
  fi
  if [ -n "$MAIL_USERNAME" ]; then
      $CKAN_HOME/bin/paster --plugin=ckan config-tool $CONFIG "smtp.user = $MAIL_USERNAME"
  fi
  if [ -n "$MAIL_PASSWORD" ]; then
      $CKAN_HOME/bin/paster --plugin=ckan config-tool $CONFIG "smtp.password = $MAIL_PASSWORD"
  fi
  if [ -n "$MAIL_FROM" ]; then
      $CKAN_HOME/bin/paster --plugin=ckan config-tool $CONFIG "smtp.mail_from = $MAIL_FROM"
  fi
  if [ -n "$FEEDBACK_RECIPIENTS" ]; then
      $CKAN_HOME/bin/paster --plugin=ckan config-tool $CONFIG "feedback.recipients = $FEEDBACK_RECIPIENTS"
  fi

  # TODO: use config tool instead?
  sed -i -e "s/\[loggers\]/\n## Message Queue\n\nckan.harvest.mq.type = redis\nckan.harvest.mq.hostname = ${REDIS_HOST}\nckan.harvest.mq.port = ${REDIS_PORT}\nckan.harvest.mq.redis_db = ${REDIS_DB}\nckan.harvest.dup_append_type = random-hex\n\n## Spatial\n\nckan.spatial.validator.profiles = iso19139ngdc\nckanext.spatial.search_backend = solr\nckan.spatial.harvest.continue_on_validation_errors = true\n[loggers]/" "$CONFIG"

# add GA data
"$CKAN_HOME/bin/paster" --plugin=ckan config-tool "$CONFIG" "googleanalytics.id=${GA_ID}" \
        "googleanalytics.account=${GA_ACCOUNT}" \
        "googleanalytics.username=${GA_USERNAME}" \
        "googleanalytics.password=${GA_PASSWORD}" \

  # Enable debug mode
  if [ -n $CKAN_DEBUG ]; then
      sed -i -e "s/debug = false/debug = ${CKAN_DEBUG}/" "$CONFIG"
  fi

  if [ -n "$ERROR_EMAIL" ]; then
    sed -i -e "s&^#email_to.*&email_to = ${ERROR_EMAIL}&" "$CONFIG"
  fi
  #sed -i -e "s&WSGIScriptAlias /&WSGIScriptAlias ${prefix}&" /etc/apache2/sites-available/ckan_default.conf
  update_pycsw_config
}

link_redis_url() {
    local host=$REDIS_HOST
    local port=$REDIS_PORT
    local db=$REDIS_DB
    echo "redis://${host}:${port}/${db}"
}

link_postgres_url () {
  local user=$POSTGRES_USER
  local pass=$POSTGRES_PASSWORD
  local db=$POSTGRES_DB
  local host=$POSTGRES_HOST
  local port=$POSTGRES_PORT
  echo "postgresql://${user}:${pass}@${host}:${port}/${db}"
}

link_pycsw_db_url () {
  local user=$POSTGRES_USER
  local pass=$POSTGRES_PASSWORD
  local host=$POSTGRES_HOST
  local port=$POSTGRES_PORT
  echo "postgresql://${user}:${pass}@${host}:${port}/pycsw"
}

link_solr_url () {
  local host=$SOLR_HOST
  local port=$SOLR_PORT
  echo "http://${host}:${port}/solr/ckan"
}

# If we don't already have a config file, bootstrap
if [ ! -e "$CONFIG" ]; then
  if [ -z "$DATABASE_URL" ]; then
    if ! DATABASE_URL=$(link_postgres_url); then
      abort "no DATABASE_URL specified and linked container called 'db' was not found"
    fi
  fi
  if [ -z "$PYCSW_DB_URL" ]; then
    if ! PYCSW_DB_URL=$(link_pycsw_db_url); then
      abort "no PYCSW_DB_URL specified and linked container called 'db' was not found"
    fi
  fi
  if [ -z "$SOLR_URL" ]; then
    if ! SOLR_URL=$(link_solr_url); then
      abort "no SOLR_URL specified and linked container called 'solr' was not found"
    fi
  fi
  if [ -z "$REDIS_URL" ]; then
    if ! REDIS_URL=$(link_redis_url); then
      abort "no REDIS_URL specified and linked container called 'redis' was not found"
    fi
  fi
  if [ -z "$CKAN_SERVER_NAME" ]; then
      CKAN_SERVER_NAME=http://$(hostname -f)/
  fi
  write_config
fi


echo "CKAN_DEBUG: $CKAN_DEBUG"
if [ "$CKAN_DEBUG" == "true" ]; then
    cat << EOF > /bin/services/ckan/run
#!/bin/sh
exec 2>&1

set -e

exec $CKAN_HOME/bin/paster serve $CKAN_CONFIG/ckan.ini
EOF

fi

# Copy pycsw configuration
if [ ! -e /etc/ckan/default/pycsw.cfg ]; then
    ln -s /usr/lib/ckan/default/src/pycsw/default.cfg /etc/ckan/default/pycsw.cfg
fi
